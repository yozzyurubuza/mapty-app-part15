
How to Plan a Project

Project Planning: Planning Step

1. User stories
    - Description of the application's functionality from the user's perspective. All user stories put together describe the entire application.

2. Features
    - Make the user stories actually work as intended

3. Flowchart
    - To Visualize what we will build

4. Architecture
    - How we will build it 
    - How we will organize our code, and what JavaScript features we will use.

Development Step - Implementation of our plan using code

*User stories
    - Description of the application's functionality from the user's perspective.

    Common format: As [type of user], I want [an action] so that [a benefit] - [Who] [What] [Why]

Ex. 

1. As a user, I want to log my running workouts with location, distance, time, pace, and steps/minute, so I can keep a log of all my running.

2. As a user, I want to log my cycling workouts with location, distance, time, speed, and elevation gain, so I can keep a log of all my cycling.

3. As a user, I want to see all my workouts at a glance, so I can easily track my progress over time

4. As a user, I want to also see my workouts on a map, so I can easily check where I work out the most.

5. As a user, I want to see all my workouts when I leave the app and come back later, so that I can keep using there app over time.


*Features

1.
- Map where user clicks to add new workout (best way to get location coordinates)
- Geolocation to display map at current location (more user friendly)
- Form to input distance, time, pace, steps/minute

2.
- Form to input distance, time, speed, elevation gain

3.
- Display all workouts in a list

4. 
- Display all workouts on the map

5. 
- Store workout data in the browser using local storage API
- On page load, read the saved data from local storage and display


*Flowchart

Features: (See Mapty-Flowchart.png)

1. Geolocation to display map at current location
    - Get current location coordinates (Async)

2. Map where user clicks to add new workout
    - Render map on current location

    *Bind handler
        - User clicks on map

3. Form to input distance, time, pace, steps/minute
    - Render workout form

4. Form to input distance, time, speed, elevation gain
    - Render workout form

    *Bind handler
        - User submits new workout

5. Display workouts in a list
    - Render workout in list

6. Display workouts on the map
    - Render workout on map

7. Store workout data in the browser
    - Store workouts in local storage

8. On page load, read the saved data and display
    - Load workouts from local storage

        *Bind handler
            - User clicks on workout in list

9. Move map to workout location on clicks
    - Move map to workout location

* It is a good idea to start with events
* In the real-worl, you don't have to come with the final flowchart right in the planning phase. It's normal that it changes throughout implementation.


*Architecture

- We don't need the perfect final architecture figured out before the implementation.



